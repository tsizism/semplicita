#k apply -f ingress.yml 
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/use-regex: "true"  # Enables regex for path matching
spec:
  rules:
    - host: front-end.info
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: front-end
                port:
                  number: 8888
    - host: broker-service.info
      http:
        paths:
          - path: /.* #Root
            pathType: ImplementationSpecific
            backend:
              service:
                name: broker-service
                port:
                  number: 8080
          - path: /([^/]+)(/.*|$)  # Match any random subdirectory or path after the domain
            pathType: ImplementationSpecific
            backend:
              service:
                name: broker-service
                port:
                  number: 8080
---
apiVersion: v1
items:
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
    creationTimestamp: "2025-03-26T22:46:07Z"
    generation: 1
    name: ingress-wear-watch
    namespace: app-space
    resourceVersion: "1416"
    uid: 7c5499b6-afcc-42b7-b190-8094c6e45034
  spec:
    rules:
    - http:
        paths:
        - backend:
            service:
              name: wear-service
              port:
                number: 8080
          path: /wear
          pathType: Prefix
        - backend:
            service:
              name: video-service
              port:
                number: 8080
          path: /watch
          pathType: Prefix
  status:
    loadBalancer:
      ingress:
      - ip: 172.20.113.42
kind: List
metadata:
  resourceVersion: ""


# controlplane ~ âžœ  k get all -n ingress-nginx 
# NAME                                            READY   STATUS      RESTARTS   AGE
# pod/ingress-nginx-admission-create-4vk4n        0/1     Completed   0          27m
# pod/ingress-nginx-admission-patch-gl8hq         0/1     Completed   0          27m
# pod/ingress-nginx-controller-6c4c749b95-xmmqb   1/1     Running     0          27m

# NAME                                         TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)                      AGE
# service/ingress-nginx-controller             NodePort    172.20.113.42   <none>        80:30080/TCP,443:32103/TCP   27m
# service/ingress-nginx-controller-admission   ClusterIP   172.20.84.41    <none>        443/TCP                      27m

# NAME                                       READY   UP-TO-DATE   AVAILABLE   AGE
# deployment.apps/ingress-nginx-controller   1/1     1            1           27m

# NAME                                                  DESIRED   CURRENT   READY   AGE
# replicaset.apps/ingress-nginx-controller-6c4c749b95   1         1         1       27m

# NAME                                       STATUS     COMPLETIONS   DURATION   AGE
# job.batch/ingress-nginx-admission-create   Complete   1/1           12s        27m
# job.batch/ingress-nginx-admission-patch    Complete   1/1           13s        27m

---

apiVersion: networking.k8s.io/v1 
kind: Ingress
metadata:
  name: test-ingress
  namespace: critical-space
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - http:
      paths:
      - path: /pay
        pathType: Prefix
        backend:
          service:
           name: pay-service
           port:
            number: 8282

--- 
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-wear-watch
  namespace: app-space
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - http:
      paths:
      - path: /wear
        pathType: Prefix
        backend:
          service:
           name: wear-service
           port: 
            number: 8080
      - path: /watch
        pathType: Prefix
        backend:
          service:
           name: video-service
           port:
            number: 8080