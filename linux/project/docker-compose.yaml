# docker-compose up -d
# docker compose pull mongodb
# docker-compose run -d mongodb


name: semplicita
services:
  fe:
    build:
      context: ./../fe
      dockerfile: ./../fe/dockerfile
    restart: always
    ports:
      - "8888:80"
    deploy:
      mode: replicated
      replicas: 1

  authentication-service:
    build:
      context: ./../authentication-service
      dockerfile: ./../authentication-service/dockerfile
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"

  broker-service:
    build: 
      context: ./../broker-service
      dockerfile: ./../broker-service/dockerfile
    restart: always
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1

  listener-service:
    build:
      context: ./../listener-service
      dockerfile: ./../listener-service/dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  mail-service:
    build:
      context: ./../mail-service
      dockerfile: ./../mail-service/dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_PORT:  1025
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_ENCRYPTION: none      
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      MAIL_FROMNAME: "John Smith"
      MAIL_FROMADDR: JohnSmith@example.com

  trace-service:
    build:
      context: ./../trace-service
      dockerfile: ./../trace-service/dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1


  postgres:
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  mongodb:
    image: 'mongo:6.0-rc-jammy'
    ports:
      - "27017:27017"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MONGO_INITDB_DATABASE: trace
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db/

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"

  rabbitmq:
    image: 'rabbitmq:alpine'
    ports:
      - "5672:5672"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/rabbitmq/:/var/lib/rabbitmq/